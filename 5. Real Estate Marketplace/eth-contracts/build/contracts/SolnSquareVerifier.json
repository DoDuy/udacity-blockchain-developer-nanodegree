{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "solutionAddress",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferedOwnership",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            }
          ],
          "internalType": "struct Verifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "mintNFT",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"solutionAddress\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferedOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct Verifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"mintNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x3a5f5b89259b2ed46af96ab9d0c86c34499052d29392fac416282195eaf7b779\",\"urls\":[\"bzz-raw://6d5e161dce682e7731e3832f84c435063f7b9859508786889f4fcfb5fba80f5d\",\"dweb:/ipfs/QmWGBRY4Z62CZX5XxqpXZEPN3owsPyZVW5PjMKSksA82Ub\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xf75ffd63f189d7aa07d4017f04f015e835de1f6672de24af0d3066c0d6f6e273\",\"urls\":[\"bzz-raw://2c530ad295a016fd192dd608b090402ccf28a445cbf6abf73c052f9ab2d11459\",\"dweb:/ipfs/Qmae1Er1Mu9MrWydkmqzmfwBRAWtSJPMeFwDnJgz7uFWqU\"]},\"project:/contracts/verifier.sol\":{\"keccak256\":\"0x91fb6e3e0ac8f09bf491b8dbe89b95377924e2f922d587cca2b99111fa070673\",\"urls\":[\"bzz-raw://2780af250372e0ec6ce001b42ba730caf517052c852165547eadff6d6d5c56e9\",\"dweb:/ipfs/QmeYCjCNVx4NhmWsHGnerrKzPRDqFQf7Ytg7StLRncAXKn\"]}},\"version\":1}",
  "bytecode": "0x60806040526040516200001290620002cd565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b50601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200007d57600080fd5b5060405162004f7138038062004f718339818101604052620000a39190810190620003e6565b818181816040518060600160405280603f815260200162004f32603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fddd10b314c26c20098919e5d9ab61e552e4b296997e9f663d4f278d1cf8edb066000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200015391906200046a565b60405180910390a160008060146101000a81548160ff0219169083151502179055506200018d6301ffc9a760e01b6200022d60201b60201c565b620001a56380ac58cd60e01b6200022d60201b60201c565b620001bd63780e9d6360e01b6200022d60201b60201c565b82600f9080519060200190620001d5929190620002db565b508160109080519060200190620001ee929190620002db565b50806011908051906020019062000207929190620002db565b5062000220635b5e139f60e01b6200022d60201b60201c565b505050505050506200054c565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200026157600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6110e18062003e5183390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200031e57805160ff19168380011785556200034f565b828001600101855582156200034f579182015b828111156200034e57825182559160200191906001019062000331565b5b5090506200035e919062000362565b5090565b6200038791905b808211156200038357600081600090555060010162000369565b5090565b90565b600082601f8301126200039c57600080fd5b8151620003b3620003ad82620004b5565b62000487565b91508082526020830160208301858383011115620003d057600080fd5b620003dd83828462000516565b50505092915050565b60008060408385031215620003fa57600080fd5b600083015167ffffffffffffffff8111156200041557600080fd5b62000423858286016200038a565b925050602083015167ffffffffffffffff8111156200044157600080fd5b6200044f858286016200038a565b9150509250929050565b6200046481620004e2565b82525050565b600060208201905062000481600083018462000459565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620004ab57600080fd5b8060405250919050565b600067ffffffffffffffff821115620004cd57600080fd5b601f19601f8301169050602081019050919050565b6000620004ef82620004f6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200053657808201518184015260208101905062000519565b8381111562000546576000848401525b50505050565b6138f5806200055c6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806340c10f19116100c3578063a22cb4651161007c578063a22cb465146103e9578063b88d4fde14610405578063bdc32be014610421578063c87b56dd1461043f578063e985e9c51461046f578063f2fde38b1461049f57610158565b806340c10f19146102ef57806342842e0e1461031f5780634f6ccce71461033b5780636352211e1461036b57806370a082311461039b578063893d20e8146103cb57610158565b806318160ddd1161011557806318160ddd146102315780631fd960da1461024f57806323b872dd1461026b57806327dc297e146102875780632f745c59146102a357806338bbfa50146102d357610158565b806301ffc9a71461015d578063081812fc1461018d578063095ea7b3146101bd57806315070401146101d957806316c38b3c146101f757806317d7de7c14610213575b600080fd5b61017760048036036101729190810190612cc3565b6104bb565b6040516101849190613396565b60405180910390f35b6101a760048036036101a29190810190612d15565b610523565b6040516101b49190613314565b60405180910390f35b6101d760048036036101d29190810190612afd565b610560565b005b6101e1610717565b6040516101ee91906133b1565b60405180910390f35b610211600480360361020c9190810190612b9e565b6107b9565b005b61021b610944565b60405161022891906133b1565b60405180910390f35b6102396109e6565b604051610246919061355e565b60405180910390f35b61026960048036036102649190810190612b39565b6109f3565b005b610285600480360361028091908101906129f7565b610c5c565b005b6102a1600480360361029c9190810190612bf0565b610c7f565b005b6102bd60048036036102b89190810190612afd565b610cc2565b6040516102ca919061355e565b60405180910390f35b6102ed60048036036102e89190810190612c44565b610d35565b005b61030960048036036103049190810190612afd565b610d3a565b6040516103169190613396565b60405180910390f35b610339600480360361033491908101906129f7565b610de8565b005b61035560048036036103509190810190612d15565b610e08565b604051610362919061355e565b60405180910390f35b61038560048036036103809190810190612d15565b610e3c565b6040516103929190613314565b60405180910390f35b6103b560048036036103b09190810190612992565b610e79565b6040516103c2919061355e565b60405180910390f35b6103d3610ec9565b6040516103e09190613314565b60405180910390f35b61040360048036036103fe9190810190612ac1565b610ef2565b005b61041f600480360361041a9190810190612a46565b611028565b005b61042961104e565b60405161043691906133b1565b60405180910390f35b61045960048036036104549190810190612d15565b6110f0565b60405161046691906133b1565b60405180910390f35b610489600480360361048491908101906129bb565b6111b7565b6040516104969190613396565b60405180910390f35b6104b960048036036104b49190810190612992565b61124b565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61056981610e3c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156105d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ce906133f3565b60405180910390fd5b6105e081610e3c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610627575061062661062082610e3c565b836111b7565b5b610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d906134b3565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107af5780601f10610784576101008083540402835291602001916107af565b820191906000526020600020905b81548152906001019060200180831161079257829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083f906134f3565b60405180910390fd5b801515600060149054906101000a900460ff161515141561089e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089590613453565b60405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615610909577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336040516108fc919061332f565b60405180910390a1610941565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051610938919061332f565b60405180910390a15b50565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109dc5780601f106109b1576101008083540402835291602001916109dc565b820191906000526020600020905b8154815290600101906020018083116109bf57829003601f168201915b5050505050905090565b6000600880549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a79906134f3565b60405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc83836040518363ffffffff1660e01b8152600401610adf929190613533565b60206040518083038186803b158015610af757600080fd5b505afa158015610b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b2f9190810190612bc7565b610b6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6590613473565b60405180910390fd5b60008385604051602001610b839291906132e8565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff166015600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c37906134d3565b60405180910390fd5b610c4a8585610d3a565b50610c5584866113e5565b5050505050565b610c663382611570565b610c6f57600080fd5b610c7a838383611605565b505050565b610cbe828260006040519080825280601f01601f191660200182016040528015610cb85781602001600182028038833980820191505090505b50610d35565b5050565b6000610ccd83610e79565b8210610cd857600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610d2257fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc2906134f3565b60405180910390fd5b610dd58383611629565b610dde8261164a565b6001905092915050565b610e0383838360405180602001604052806000815250611028565b505050565b6000610e126109e6565b8210610e1d57600080fd5b60088281548110610e2a57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610ec2600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611732565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f2b57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161101c9190613396565b60405180910390a35050565b611033848484610c5c565b61103f84848484611740565b61104857600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110e65780601f106110bb576101008083540402835291602001916110e6565b820191906000526020600020905b8154815290600101906020018083116110c957829003601f168201915b5050505050905090565b60606110fb82611857565b61110457600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111ab5780601f10611180576101008083540402835291602001916111ab565b820191906000526020600020905b81548152906001019060200180831161118e57829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d1906134f3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561134a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134190613493565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fddd10b314c26c20098919e5d9ab61e552e4b296997e9f663d4f278d1cf8edb066000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516113da9190613314565b60405180910390a150565b6113ed612575565b60405180604001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff168152509050601481908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050600083836040516020016114b19291906132e8565b60405160208183030381529060405280519060200120905081601560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d8484604051611562929190613579565b60405180910390a150505050565b60008061157c83610e3c565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115eb57508373ffffffffffffffffffffffffffffffffffffffff166115d384610523565b73ffffffffffffffffffffffffffffffffffffffff16145b806115fc57506115fb81856111b7565b5b91505092915050565b6116108383836118c9565b61161a8382611af8565b6116248282611c96565b505050565b6116338282611d5d565b61163d8282611c96565b61164681611f0f565b5050565b61165381611857565b61165c57600080fd5b61170860118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116f55780601f106116ca576101008083540402835291602001916116f5565b820191906000526020600020905b8154815290600101906020018083116116d857829003601f168201915b505050505061170383611f5b565b612088565b60126000838152602001908152602001600020908051906020019061172e9291906125a5565b5050565b600081600001549050919050565b60006117618473ffffffffffffffffffffffffffffffffffffffff166120cc565b61176e576001905061184f565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016117af949392919061334a565b602060405180830381600087803b1580156117c957600080fd5b505af11580156117dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118019190810190612cec565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6118d281610e3c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461193f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193690613433565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a6906133d3565b60405180910390fd5b6119b881612117565b6119ff600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121d5565b611a46600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121f8565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611b506001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061220e90919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611c3d576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611bbd57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611c1557fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611c8f9190612625565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611d6681611857565b15611da6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9d90613413565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0d90613513565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611eaf600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121f8565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611fa3576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612083565b600082905060005b60008214611fcd578080600101915050600a8281611fc557fe5b049150611fab565b6060816040519080825280601f01601f1916602001820160405280156120025781602001600182028038833980820191505090505b50905060006001830390505b6000861461207b57600a868161202057fe5b0660300160f81b8282806001900393508151811061203a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161207357fe5b04955061200e565b819450505050505b919050565b60606120c48383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612258565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561210e57506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146121d25760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6121ed6001826000015461220e90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061225083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061251a565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156122b45781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612339578881815181106122e057fe5b602001015160f81c60f81b8383806001019450815181106122fd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506122cb565b600090505b87518110156123ac5787818151811061235357fe5b602001015160f81c60f81b83838060010194508151811061237057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061233e565b600090505b865181101561241f578681815181106123c657fe5b602001015160f81c60f81b8383806001019450815181106123e357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123b1565b600090505b85518110156124925785818151811061243957fe5b602001015160f81c60f81b83838060010194508151811061245657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612424565b600090505b8451811015612505578481815181106124ac57fe5b602001015160f81c60f81b8383806001019450815181106124c957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612497565b82995050505050505050505095945050505050565b6000838311158290612562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161255991906133b1565b60405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106125e657805160ff1916838001178555612614565b82800160010185558215612614579182015b828111156126135782518255916020019190600101906125f8565b5b5090506126219190612651565b5090565b81548183558181111561264c5781836000526020600020918201910161264b9190612651565b5b505050565b61267391905b8082111561266f576000816000905550600101612657565b5090565b90565b6000813590506126858161383f565b92915050565b600082601f83011261269c57600080fd5b60026126af6126aa826135cf565b6135a2565b915081838560208402820111156126c557600080fd5b60005b838110156126f557816126db888261297d565b8452602084019350602083019250506001810190506126c8565b5050505092915050565b600082601f83011261271057600080fd5b600261272361271e826135f1565b6135a2565b9150818385602084028201111561273957600080fd5b60005b83811015612769578161274f888261297d565b84526020840193506020830192505060018101905061273c565b5050505092915050565b60008135905061278281613856565b92915050565b60008151905061279781613856565b92915050565b6000813590506127ac8161386d565b92915050565b6000813590506127c181613884565b92915050565b6000815190506127d681613884565b92915050565b600082601f8301126127ed57600080fd5b81356128006127fb82613613565b6135a2565b9150808252602083016020830185838301111561281c57600080fd5b6128278382846137b1565b50505092915050565b600082601f83011261284157600080fd5b813561285461284f8261363f565b6135a2565b9150808252602083016020830185838301111561287057600080fd5b61287b8382846137b1565b50505092915050565b60006040828403121561289657600080fd5b6128a060406135a2565b905060006128b08482850161297d565b60008301525060206128c48482850161297d565b60208301525092915050565b6000608082840312156128e257600080fd5b6128ec60406135a2565b905060006128fc8482850161268b565b60008301525060406129108482850161268b565b60208301525092915050565b6000610100828403121561292f57600080fd5b61293960606135a2565b9050600061294984828501612884565b600083015250604061295d848285016128d0565b60208301525060c061297184828501612884565b60408301525092915050565b60008135905061298c8161389b565b92915050565b6000602082840312156129a457600080fd5b60006129b284828501612676565b91505092915050565b600080604083850312156129ce57600080fd5b60006129dc85828601612676565b92505060206129ed85828601612676565b9150509250929050565b600080600060608486031215612a0c57600080fd5b6000612a1a86828701612676565b9350506020612a2b86828701612676565b9250506040612a3c8682870161297d565b9150509250925092565b60008060008060808587031215612a5c57600080fd5b6000612a6a87828801612676565b9450506020612a7b87828801612676565b9350506040612a8c8782880161297d565b925050606085013567ffffffffffffffff811115612aa957600080fd5b612ab5878288016127dc565b91505092959194509250565b60008060408385031215612ad457600080fd5b6000612ae285828601612676565b9250506020612af385828601612773565b9150509250929050565b60008060408385031215612b1057600080fd5b6000612b1e85828601612676565b9250506020612b2f8582860161297d565b9150509250929050565b6000806000806101808587031215612b5057600080fd5b6000612b5e87828801612676565b9450506020612b6f8782880161297d565b9350506040612b808782880161291c565b925050610140612b92878288016126ff565b91505092959194509250565b600060208284031215612bb057600080fd5b6000612bbe84828501612773565b91505092915050565b600060208284031215612bd957600080fd5b6000612be784828501612788565b91505092915050565b60008060408385031215612c0357600080fd5b6000612c118582860161279d565b925050602083013567ffffffffffffffff811115612c2e57600080fd5b612c3a85828601612830565b9150509250929050565b600080600060608486031215612c5957600080fd5b6000612c678682870161279d565b935050602084013567ffffffffffffffff811115612c8457600080fd5b612c9086828701612830565b925050604084013567ffffffffffffffff811115612cad57600080fd5b612cb9868287016127dc565b9150509250925092565b600060208284031215612cd557600080fd5b6000612ce3848285016127b2565b91505092915050565b600060208284031215612cfe57600080fd5b6000612d0c848285016127c7565b91505092915050565b600060208284031215612d2757600080fd5b6000612d358482850161297d565b91505092915050565b6000612d4a83836132b3565b60208301905092915050565b612d5f8161377b565b82525050565b612d6e816136fd565b82525050565b612d85612d80826136fd565b6137f3565b82525050565b612d948161368a565b612d9e81846136d0565b9250612da982613675565b8060005b83811015612dda578151612dc18782612d3e565b9650612dcc836136b8565b925050600181019050612dad565b505050505050565b612deb8161367f565b612df581846136c5565b9250612e008261366b565b8060005b83811015612e31578151612e188782612d3e565b9650612e23836136ab565b925050600181019050612e04565b505050505050565b612e428161370f565b82525050565b6000612e5382613695565b612e5d81856136db565b9350612e6d8185602086016137c0565b612e7681613821565b840191505092915050565b6000612e8c826136a0565b612e9681856136ec565b9350612ea68185602086016137c0565b612eaf81613821565b840191505092915050565b6000612ec76015836136ec565b91507f746f206164647265737320697320696e76616c696400000000000000000000006000830152602082019050919050565b6000612f07602c836136ec565b91507f476976656e206164647265737320746f20626520746865206f776e6572206f6660008301527f2074686520746f6b656e496400000000000000000000000000000000000000006020830152604082019050919050565b6000612f6d6016836136ec565b91507f546f6b656e496420616c726561647920657869737473000000000000000000006000830152602082019050919050565b6000612fad6034836136ec565b91507f66726f6d2061646472657373206e65656420746f20626520746865206f776e6560008301527f72206f662074686520676976656e20746f6b656e0000000000000000000000006020830152604082019050919050565b60006130136015836136ec565b91507f506175736564206973206e6f74206368616e67656400000000000000000000006000830152602082019050919050565b60006130536010836136ec565b91507f50726f6f6620697320696e76616c6964000000000000000000000000000000006000830152602082019050919050565b60006130936011836136ec565b91507f4e6577206f776e657220696e76616c69640000000000000000000000000000006000830152602082019050919050565b60006130d3605b836136ec565b91507f436f6e646974696f6e206661696c3a206d73672073656e64657220746f20626560008301527f20746865206f776e6572206f662074686520636f6e7472616374206f7220697360208301527f417070726f766564466f72416c6c282920746f206265207472756500000000006040830152606082019050919050565b600061315f6017836136ec565b91507f536f6c7574696f6e20616c7265616479206578697374730000000000000000006000830152602082019050919050565b600061319f6020836136ec565b91507f52657175697265206f6e6c7920636f6e7472616374206f776e65722063616c6c6000830152602082019050919050565b60006131df6012836136ec565b91507f4164647265737320697320696e76616c696400000000000000000000000000006000830152602082019050919050565b60408201600082015161322860008501826132b3565b50602082015161323b60208501826132b3565b50505050565b6080820160008201516132576000850182612de2565b50602082015161326a6040850182612de2565b50505050565b610100820160008201516132876000850182613212565b50602082015161329a6040850182613241565b5060408201516132ad60c0850182613212565b50505050565b6132bc81613771565b82525050565b6132cb81613771565b82525050565b6132e26132dd82613771565b613817565b82525050565b60006132f482856132d1565b6020820191506133048284612d74565b6014820191508190509392505050565b60006020820190506133296000830184612d65565b92915050565b60006020820190506133446000830184612d56565b92915050565b600060808201905061335f6000830187612d56565b61336c6020830186612d65565b61337960408301856132c2565b818103606083015261338b8184612e48565b905095945050505050565b60006020820190506133ab6000830184612e39565b92915050565b600060208201905081810360008301526133cb8184612e81565b905092915050565b600060208201905081810360008301526133ec81612eba565b9050919050565b6000602082019050818103600083015261340c81612efa565b9050919050565b6000602082019050818103600083015261342c81612f60565b9050919050565b6000602082019050818103600083015261344c81612fa0565b9050919050565b6000602082019050818103600083015261346c81613006565b9050919050565b6000602082019050818103600083015261348c81613046565b9050919050565b600060208201905081810360008301526134ac81613086565b9050919050565b600060208201905081810360008301526134cc816130c6565b9050919050565b600060208201905081810360008301526134ec81613152565b9050919050565b6000602082019050818103600083015261350c81613192565b9050919050565b6000602082019050818103600083015261352c816131d2565b9050919050565b6000610140820190506135496000830185613270565b613557610100830184612d8b565b9392505050565b600060208201905061357360008301846132c2565b92915050565b600060408201905061358e60008301856132c2565b61359b6020830184612d65565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156135c557600080fd5b8060405250919050565b600067ffffffffffffffff8211156135e657600080fd5b602082029050919050565b600067ffffffffffffffff82111561360857600080fd5b602082029050919050565b600067ffffffffffffffff82111561362a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561365657600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061370882613751565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006137868261378d565b9050919050565b60006137988261379f565b9050919050565b60006137aa82613751565b9050919050565b82818337600083830152505050565b60005b838110156137de5780820151818401526020810190506137c3565b838111156137ed576000848401525b50505050565b60006137fe82613805565b9050919050565b600061381082613832565b9050919050565b6000819050919050565b6000601f19601f8301169050919050565b60008160601b9050919050565b613848816136fd565b811461385357600080fd5b50565b61385f8161370f565b811461386a57600080fd5b50565b6138768161371b565b811461388157600080fd5b50565b61388d81613725565b811461389857600080fd5b50565b6138a481613771565b81146138af57600080fd5b5056fea365627a7a72315820043ff1e89ca90e936b2ae78fc6ae41217e54743e2920187099c5baf0f96036156c6578706572696d656e74616cf564736f6c63430005100040608060405234801561001057600080fd5b506110c1806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806343cd76fc14610030575b600080fd5b61004a60048036036100459190810190610f78565b610060565b6040516100579190610fc5565b60405180910390f35b6000606060026040519080825280602002602001820160405280156100945781602001602082028038833980820191505090505b50905060008090505b60028110156100dc578381600281106100b257fe5b60200201518282815181106100c357fe5b602002602001018181525050808060010191505061009d565b5060006100e98286610105565b14156100f95760019150506100ff565b60009150505b92915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050610133610c59565b61013b610277565b905080608001515160018651011461015257600080fd5b61015a610ca0565b6040518060400160405280600081526020016000815250905060008090505b86518110156101f0578387828151811061018f57fe5b6020026020010151106101a157600080fd5b6101e1826101dc856080015160018501815181106101bb57fe5b60200260200101518a85815181106101cf57fe5b60200260200101516106c5565b610757565b91508080600101915050610179565b5061021381836080015160008151811061020657fe5b6020026020010151610757565b90506102598560000151866020015161022b84610808565b856040015161023d8a60400151610808565b876060015161024f8960000151610808565b89602001516108a2565b6102695760019350505050610271565b600093505050505b92915050565b61027f610c59565b60405180604001604052807f19da9cc6bdde801484456f5a58963a9b2da4895b9a8364382feb30e43d162ed081526020017f094497eb964cdda229321d15482fb903f160ac8fedf51707c5054790ff28bc2f8152508160000181905250604051806040016040528060405180604001604052807f1039b99311d7e8fbbb69b73f79a98341e6e295534e543c563270e2e3a8445ad181526020017f1e4ebdf404a0bd53bb5c84b7ba319c126ed980f1fbbd2ff4f3b261ffe02bd1df815250815260200160405180604001604052807f21d3009154507b21cdb61d358c815d80488362e28204a240d4ee25813e45693481526020017f2fe8845923911d4c37481c022a790f9808730f79e3ab0fa017c0de4173d77b3e8152508152508160200181905250604051806040016040528060405180604001604052807f1155bc3c6d1dab096262b3f3e03e2d1caa9e788cdc367f303786834a8b5842fd81526020017f241e1c63afbbc804e968de890ffa167c5529b886368eef0f501f99f8e105d9ef815250815260200160405180604001604052807f01b9133b908552bc284469a3071212da2d9f78a5fe8fa9ed04b392706e1f17ab81526020017f12dc52b045b7fa99661dccea4ccb3675e80214d1a46e61d9bdab165f4a25d6558152508152508160400181905250604051806040016040528060405180604001604052807f256cd34c4224f6b5d43180e6f5d053e8f7d058892072648e59a352dbdb78409481526020017f244629df805270d2a9d12ec09745a349fda5a6e66418cd02fd1fc88e85e553f7815250815260200160405180604001604052807f0c7a7b79ca94480f2a27f97dea04e25fc4fb5a6f732a98bc701c781f7f4f85c781526020017f1ebf10f7939326fc518e69d633ba09fa8742c2fdd1824ab9b9cbdd3c127a884a8152508152508160600181905250600360405190808252806020026020018201604052801561056657816020015b610553610cba565b81526020019060019003908161054b5790505b50816080018190525060405180604001604052807f17664160b7fcfa9233a875b7c203db05afd427c77781b889d5322b951a2172e181526020017f216ba87e31b09aeb3ae703927d13fa1b44f451eae177a6e81347e1776be3fad781525081608001516000815181106105d557fe5b602002602001018190525060405180604001604052807f07271b0c5f81639753933a79fdb190f055e5c835a671dfc65c020f060638b56c81526020017f2a4e84621f852cc0737eb566c95a3eda6a82f958d31cdca6b29d02168eb27481815250816080015160018151811061064657fe5b602002602001018190525060405180604001604052807f1d45242b779c56473861b901ebd70e5a0d4656db5cee9b68d853f1d6de3ecada81526020017f2638bdedf05b6743c0b35065ced1711728cb52388618b29d81fd928bf48c37c581525081608001516002815181106106b757fe5b602002602001018190525090565b6106cd610ca0565b6106d5610cd4565b8360000151816000600381106106e757fe5b60200201818152505083602001518160016003811061070257fe5b602002018181525050828160026003811061071957fe5b602002018181525050600060608360808460076107d05a03fa9050806000811461074257610744565bfe5b508061074f57600080fd5b505092915050565b61075f610ca0565b610767610cf6565b83600001518160006004811061077957fe5b60200201818152505083602001518160016004811061079457fe5b6020020181815250508260000151816002600481106107af57fe5b6020020181815250508260200151816003600481106107ca57fe5b602002018181525050600060608360c08460066107d05a03fa905080600081146107f3576107f5565bfe5b508061080057600080fd5b505092915050565b610810610ca0565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790506000836000015114801561084d575060008360200151145b1561087157604051806040016040528060008152602001600081525091505061089d565b6040518060400160405280846000015181526020018285602001518161089357fe5b0683038152509150505b919050565b6000606060046040519080825280602002602001820160405280156108e157816020015b6108ce610cba565b8152602001906001900390816108c65790505b5090506060600460405190808252806020026020018201604052801561092157816020015b61090e610d18565b8152602001906001900390816109065790505b5090508a8260008151811061093257fe5b6020026020010181905250888260018151811061094b57fe5b6020026020010181905250868260028151811061096457fe5b6020026020010181905250848260038151811061097d57fe5b6020026020010181905250898160008151811061099657fe5b602002602001018190525087816001815181106109af57fe5b602002602001018190525085816002815181106109c857fe5b602002602001018190525083816003815181106109e157fe5b60200260200101819052506109f68282610a06565b9250505098975050505050505050565b60008151835114610a1657600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015610a555781602001602082028038833980820191505090505b50905060008090505b83811015610bfb57868181518110610a7257fe5b602002602001015160000151826000600684020181518110610a9057fe5b602002602001018181525050868181518110610aa857fe5b602002602001015160200151826001600684020181518110610ac657fe5b602002602001018181525050858181518110610ade57fe5b602002602001015160000151600160028110610af657fe5b6020020151826002600684020181518110610b0d57fe5b602002602001018181525050858181518110610b2557fe5b602002602001015160000151600060028110610b3d57fe5b6020020151826003600684020181518110610b5457fe5b602002602001018181525050858181518110610b6c57fe5b602002602001015160200151600160028110610b8457fe5b6020020151826004600684020181518110610b9b57fe5b602002602001018181525050858181518110610bb357fe5b602002602001015160200151600060028110610bcb57fe5b6020020151826005600684020181518110610be257fe5b6020026020010181815250508080600101915050610a5e565b50610c04610d3e565b6000602082602086026020860160086107d05a03fa90508060008114610c2957610c2b565bfe5b5080610c3657600080fd5b600082600060018110610c4557fe5b602002015114159550505050505092915050565b6040518060a00160405280610c6c610cba565b8152602001610c79610d18565b8152602001610c86610d18565b8152602001610c93610d18565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b6040518060400160405280610d2b610d60565b8152602001610d38610d60565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6040518060400160405280600290602082028038833980820191505090505090565b600082601f830112610d9357600080fd5b6002610da6610da18261100d565b610fe0565b91508183856020840282011115610dbc57600080fd5b60005b83811015610dec5781610dd28882610f63565b845260208401935060208301925050600181019050610dbf565b5050505092915050565b600082601f830112610e0757600080fd5b6002610e1a610e158261102f565b610fe0565b91508183856020840282011115610e3057600080fd5b60005b83811015610e605781610e468882610f63565b845260208401935060208301925050600181019050610e33565b5050505092915050565b600060408284031215610e7c57600080fd5b610e866040610fe0565b90506000610e9684828501610f63565b6000830152506020610eaa84828501610f63565b60208301525092915050565b600060808284031215610ec857600080fd5b610ed26040610fe0565b90506000610ee284828501610d82565b6000830152506040610ef684828501610d82565b60208301525092915050565b60006101008284031215610f1557600080fd5b610f1f6060610fe0565b90506000610f2f84828501610e6a565b6000830152506040610f4384828501610eb6565b60208301525060c0610f5784828501610e6a565b60408301525092915050565b600081359050610f7281611067565b92915050565b6000806101408385031215610f8c57600080fd5b6000610f9a85828601610f02565b925050610100610fac85828601610df6565b9150509250929050565b610fbf81611051565b82525050565b6000602082019050610fda6000830184610fb6565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561100357600080fd5b8060405250919050565b600067ffffffffffffffff82111561102457600080fd5b602082029050919050565b600067ffffffffffffffff82111561104657600080fd5b602082029050919050565b60008115159050919050565b6000819050919050565b6110708161105d565b811461107b57600080fd5b5056fea365627a7a723158206a5b4adcf5955e73b478418691de9d8d76f3854bd16d1e56c8887c2269d50e286c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "",
  "sourceMap": "325:1915:7:-;;;400:14;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;400:14:7;380:34;;;;;;;;;;;;;;;;;;;;890:96;8:9:-1;5:2;;;30:1;27;20:12;5:2;890:96:7;;;;;;;;;;;;;;;;;;;;;;;;970:4;976:6;22410:4:4;22416:6;22424:8;;;;;;;;;;;;;;;;;608:10;599:6;;:19;;;;;;;;;;;;;;;;;;634:27;654:6;;;;;;;;;;;634:27;;;;;;;;;;;;;;;2186:5;2176:7;;:15;;;;;;;;;;;;;;;;;;3090:40;2687:10;3109:20;;3090:18;;;:40;;:::i;:::-;5236;5110:10;5255:20;;5236:18;;;:40;;:::i;:::-;12809:51;12415:10;12828:31;;12809:18;;;:51;;:::i;:::-;20252:4;20244:5;:12;;;;;;;;;;;;:::i;:::-;;20276:6;20266:7;:16;;;;;;;;;;;;:::i;:::-;;20308:12;20292:13;:28;;;;;;;;;;;;:::i;:::-;;20331:49;19914:10;20350:29;;20331:18;;;:49;;:::i;:::-;20103:284;;;22334:102;;890:96:7;;325:1915;;3440:158:4;3530:10;3515:25;;:11;:25;;;;;3507:34;;;;;;3587:4;3551:20;:33;3572:11;3551:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3440:158;:::o;325:1915:7:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6:444:-1:-;;119:3;112:4;104:6;100:17;96:27;86:2;;137:1;134;127:12;86:2;167:6;161:13;189:65;204:49;246:6;204:49;;;189:65;;;180:74;;274:6;267:5;260:21;310:4;302:6;298:17;343:4;336:5;332:16;378:3;369:6;364:3;360:16;357:25;354:2;;;395:1;392;385:12;354:2;405:39;437:6;432:3;427;405:39;;;79:371;;;;;;;;458:597;;;610:2;598:9;589:7;585:23;581:32;578:2;;;626:1;623;616:12;578:2;682:1;671:9;667:17;661:24;705:18;697:6;694:30;691:2;;;737:1;734;727:12;691:2;757:74;823:7;814:6;803:9;799:22;757:74;;;747:84;;640:197;889:2;878:9;874:18;868:25;913:18;905:6;902:30;899:2;;;945:1;942;935:12;899:2;965:74;1031:7;1022:6;1011:9;1007:22;965:74;;;955:84;;847:198;572:483;;;;;;1062:113;1145:24;1163:5;1145:24;;;1140:3;1133:37;1127:48;;;1182:213;;1300:2;1289:9;1285:18;1277:26;;1314:71;1382:1;1371:9;1367:17;1358:6;1314:71;;;1271:124;;;;;1402:256;;1464:2;1458:9;1448:19;;1502:4;1494:6;1490:17;1601:6;1589:10;1586:22;1565:18;1553:10;1550:34;1547:62;1544:2;;;1622:1;1619;1612:12;1544:2;1642:10;1638:2;1631:22;1442:216;;;;;1665:322;;1809:18;1801:6;1798:30;1795:2;;;1841:1;1838;1831:12;1795:2;1908:4;1904:9;1897:4;1889:6;1885:17;1881:33;1873:41;;1972:4;1966;1962:15;1954:23;;1732:255;;;;1994:91;;2056:24;2074:5;2056:24;;;2045:35;;2039:46;;;;2092:121;;2165:42;2158:5;2154:54;2143:65;;2137:76;;;;2221:268;2286:1;2293:101;2307:6;2304:1;2301:13;2293:101;;;2383:1;2378:3;2374:11;2368:18;2364:1;2359:3;2355:11;2348:39;2329:2;2326:1;2322:10;2317:15;;2293:101;;;2409:6;2406:1;2403:13;2400:2;;;2474:1;2465:6;2460:3;2456:16;2449:27;2400:2;2270:219;;;;;325:1915:7;;;;;;;",
  "deployedSourceMap": "325:1915:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;325:1915:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3228:133:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6521:167;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5815:700;;;;;;;;;;;;;;;;:::i;:::-;;20565:89;;;:::i;:::-;;;;;;;;;;;;;;;;1789:270;;;;;;;;;;;;;;;;:::i;:::-;;20474:85;;;:::i;:::-;;;;;;;;;;;;;;;;13574:94;;;:::i;:::-;;;;;;;;;;;;;;;;1713:525:7;;;;;;;;;;;;;;;;:::i;:::-;;7665:180:4;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:6;;;;;;;;;;;;;;;;:::i;:::-;;13240:182:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:6;;;;;;;;;;;;;;;;:::i;:::-;;22442:173:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7851:132;;;;;;;;;;;;;;;;:::i;:::-;;14005:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5580:162;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5289:285;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1440:79;;;:::i;:::-;;;;;;;;;;;;;;;;6980:213;;;;;;;;;;;;;;;;:::i;:::-;;7989:211;;;;;;;;;;;;;;;;:::i;:::-;;20660:101;;;:::i;:::-;;;;;;;;;;;;;;;;20767:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7514:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1095:339;;;;;;;;;;;;;;;;:::i;:::-;;3228:133;3298:4;3321:20;:33;3342:11;3321:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3314:40;;3228:133;;;:::o;6521:167::-;6580:7;6657:15;:24;6673:7;6657:24;;;;;;;;;;;;;;;;;;;;;6650:31;;6521:167;;;:::o;5815:700::-;5978:16;5986:7;5978;:16::i;:::-;5972:22;;:2;:22;;;;5964:79;;;;;;;;;;;;;;;;;;;;;;6179:16;6187:7;6179;:16::i;:::-;6165:30;;:10;:30;;;:72;;;;6199:38;6216:16;6224:7;6216;:16::i;:::-;6234:2;6199:16;:38::i;:::-;6165:72;6157:176;;;;;;;;;;;;;;;;;;;;;;6422:2;6395:15;:24;6411:7;6395:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6500:7;6496:2;6475:33;;6484:10;6475:33;;;;;;;;;;;;5815:700;;:::o;20565:89::-;20608:13;20640:7;20633:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20565:89;:::o;1789:270::-;827:6;;;;;;;;;;;813:20;;:10;:20;;;805:65;;;;;;;;;;;;;;;;;;;;;;1867:6;1856:17;;:7;;;;;;;;;;;:17;;;;1848:51;;;;;;;;;;;;;;;;;;;;;;1919:6;1909:7;;:16;;;;;;;;;;;;;;;;;;1940:7;;;;;;;;;;;1936:117;;;1968:18;1975:10;1968:18;;;;;;;;;;;;;;;1936:117;;;2022:20;2031:10;2022:20;;;;;;;;;;;;;;;1936:117;1789:270;:::o;20474:85::-;20515:13;20547:5;20540:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20474:85;:::o;13574:94::-;13618:7;13644:10;:17;;;;13637:24;;13574:94;:::o;1713:525:7:-;827:6:4;;;;;;;;;;;813:20;;:10;:20;;;805:65;;;;;;;;;;;;;;;;;;;;;;1949:8:7;;;;;;;;;;;:17;;;1967:5;1974;1949:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1949:31:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1949:31:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1949:31:7;;;;;;;;;1941:60;;;;;;;;;;;;;;;;;;;;;;2012:11;2053:7;2062:2;2036:29;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2036:29:7;;;2026:40;;;;;;2012:54;;2132:1;2084:50;;:15;:20;2100:3;2084:20;;;;;;;;;;;:36;;;;;;;;;;;;:50;;;2076:86;;;;;;;;;;;;;;;;;;;;;;2173:23;2184:2;2188:7;2173:10;:23::i;:::-;;2206:25;2219:7;2228:2;2206:12;:25::i;:::-;880:1:4;1713:525:7;;;;:::o;7665:180:4:-;7755:39;7774:10;7786:7;7755:18;:39::i;:::-;7747:48;;;;;;7806:32;7820:4;7826:2;7830:7;7806:13;:32::i;:::-;7665:180;;;:::o;14801:122:6:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:6;;;;14876:10;:40::i;:::-;14801:122;;:::o;13240:182:4:-;13320:7;13355:16;13365:5;13355:9;:16::i;:::-;13347:5;:24;13339:33;;;;;;13389:12;:19;13402:5;13389:19;;;;;;;;;;;;;;;13409:5;13389:26;;;;;;;;;;;;;;;;13382:33;;13240:182;;;;:::o;14929:166:6:-;;;;:::o;22442:173:4:-;22510:4;827:6;;;;;;;;;;;813:20;;:10;:20;;;805:65;;;;;;;;;;;;;;;;;;;;;;22526:24;22538:2;22542:7;22526:11;:24::i;:::-;22560:26;22578:7;22560:17;:26::i;:::-;22604:4;22597:11;;22442:173;;;;:::o;7851:132::-;7937:39;7954:4;7960:2;7964:7;7937:39;;;;;;;;;;;;:16;:39::i;:::-;7851:132;;;:::o;14005:148::-;14063:7;14098:13;:11;:13::i;:::-;14090:5;:21;14082:30;;;;;;14129:10;14140:5;14129:17;;;;;;;;;;;;;;;;14122:24;;14005:148;;;:::o;5580:162::-;5635:7;5715:11;:20;5727:7;5715:20;;;;;;;;;;;;;;;;;;;;;5708:27;;5580:162;;;:::o;5289:285::-;5344:7;5533:34;:17;:24;5551:5;5533:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5526:41;;5289:285;;;:::o;1440:79::-;1480:7;1506:6;;;;;;;;;;;1499:13;;1440:79;:::o;6980:213::-;7065:10;7059:16;;:2;:16;;;;7051:25;;;;;;7123:8;7086:18;:30;7105:10;7086:30;;;;;;;;;;;;;;;:34;7117:2;7086:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7173:2;7146:40;;7161:10;7146:40;;;7177:8;7146:40;;;;;;;;;;;;;;;6980:213;;:::o;7989:211::-;8095:31;8108:4;8114:2;8118:7;8095:12;:31::i;:::-;8144:48;8167:4;8173:2;8177:7;8186:5;8144:22;:48::i;:::-;8136:57;;;;;;7989:211;;;;:::o;20660:101::-;20709:13;20741;20734:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20660:101;:::o;20767:151::-;20825:13;20858:16;20866:7;20858;:16::i;:::-;20850:25;;;;;;20892:10;:19;20903:7;20892:19;;;;;;;;;;;20885:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20767:151;;;:::o;7514:145::-;7594:4;7617:18;:25;7636:5;7617:25;;;;;;;;;;;;;;;:35;7643:8;7617:35;;;;;;;;;;;;;;;;;;;;;;;;;7610:42;;7514:145;;;;:::o;1095:339::-;827:6;;;;;;;;;;;813:20;;:10;:20;;;805:65;;;;;;;;;;;;;;;;;;;;;;1333:1;1313:22;;:8;:22;;;;1305:52;;;;;;;;;;;;;;;;;;;;;;1376:8;1367:6;;:17;;;;;;;;;;;;;;;;;;1400:27;1420:6;;;;;;;;;;;1400:27;;;;;;;;;;;;;;;1095:339;:::o;1075:422:7:-;1156:24;;:::i;:::-;1183:102;;;;;;;;1200:5;1183:102;;;;1268:15;1183:102;;;;;1156:129;;1296:9;1311:8;1296:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1296:24:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1331:11;1372:5;1379:15;1355:40;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1355:40:7;;;1345:51;;;;;;1331:65;;1429:8;1406:15;:20;1422:3;1406:20;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:37;1467:5;1474:15;1453:37;;;;;;;;;;;;;;;;1075:422;;;;:::o;8906:246:4:-;8991:4;9007:13;9023:16;9031:7;9023;:16::i;:::-;9007:32;;9068:5;9057:16;;:7;:16;;;:51;;;;9101:7;9077:31;;:20;9089:7;9077:11;:20::i;:::-;:31;;;9057:51;:87;;;;9112:32;9129:5;9136:7;9112:16;:32::i;:::-;9057:87;9049:96;;;8906:246;;;;:::o;14528:239::-;14613:38;14633:4;14639:2;14643:7;14613:19;:38::i;:::-;14662:47;14695:4;14701:7;14662:32;:47::i;:::-;14720:40;14748:2;14752:7;14720:27;:40::i;:::-;14528:239;;;:::o;15022:196::-;15085:24;15097:2;15101:7;15085:11;:24::i;:::-;15120:40;15148:2;15152:7;15120:27;:40::i;:::-;15171;15203:7;15171:31;:40::i;:::-;15022:196;;:::o;21395:164::-;21460:16;21468:7;21460;:16::i;:::-;21452:25;;;;;;21509:43;21519:13;21509:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21534:17;21543:7;21534:8;:17::i;:::-;21509:9;:43::i;:::-;21487:10;:19;21498:7;21487:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21395:164;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11260:347:4:-;11381:4;11406:15;:2;:13;;;:15::i;:::-;11401:58;;11444:4;11437:11;;;;11401:58;11469:13;11501:2;11485:36;;;11522:10;11534:4;11540:7;11549:5;11485:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11485:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11485:70:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11485:70:4;;;;;;;;;11469:86;;4243:10;11583:16;;11573:26;;;:6;:26;;;;11565:35;;;11260:347;;;;;;;:::o;8394:152::-;8451:4;8467:13;8483:11;:20;8495:7;8483:20;;;;;;;;;;;;;;;;;;;;;8467:36;;8537:1;8520:19;;:5;:19;;;;8513:26;;;8394:152;;;:::o;10011:721::-;10183:16;10191:7;10183;:16::i;:::-;10175:24;;:4;:24;;;10167:89;;;;;;;;;;;;;;;;;;;;;;10356:1;10342:16;;:2;:16;;;;10334:50;;;;;;;;;;;;;;;;;;;;;;10426:23;10441:7;10426:14;:23::i;:::-;10534:35;:17;:23;10552:4;10534:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10579:33;:17;:21;10597:2;10579:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10645:2;10622:11;:20;10634:7;10622:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10717:7;10713:2;10698:27;;10707:4;10698:27;;;;;;;;;;;;10011:721;;;:::o;16994:1128::-;17256:22;17281:32;17311:1;17281:12;:18;17294:4;17281:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17256:57;;17323:18;17344:17;:26;17362:7;17344:26;;;;;;;;;;;;17323:47;;17488:14;17474:10;:28;17470:323;;17518:19;17540:12;:18;17553:4;17540:18;;;;;;;;;;;;;;;17559:14;17540:34;;;;;;;;;;;;;;;;17518:56;;17622:11;17589:12;:18;17602:4;17589:18;;;;;;;;;;;;;;;17608:10;17589:30;;;;;;;;;;;;;;;:44;;;;17738:10;17705:17;:30;17723:11;17705:30;;;;;;;;;;;:43;;;;17470:323;;17879:12;:18;17892:4;17879:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16994:1128;;;;:::o;15840:183::-;15953:12;:16;15966:2;15953:16;;;;;;;;;;;;;;;:23;;;;15924:17;:26;15942:7;15924:26;;;;;;;;;;;:52;;;;15986:12;:16;15999:2;15986:16;;;;;;;;;;;;;;;16008:7;15986:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15986:30:4;;;;;;;;;;;;;;;;;;;;;;15840:183;;:::o;9309:503::-;9465:16;9473:7;9465;:16::i;:::-;9464:17;9456:52;;;;;;;;;;;;;;;;;;;;;;9540:1;9526:16;;:2;:16;;;;9518:47;;;;;;;;;;;;;;;;;;;;;;9676:2;9653:11;:20;9665:7;9653:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9688:33;:17;:21;9706:2;9688:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9797:7;9793:2;9772:33;;9789:1;9772:33;;;;;;;;;;;;9309:503;;:::o;16218:161::-;16321:10;:17;;;;16294:15;:24;16310:7;16294:24;;;;;;;;;;;:44;;;;16348:10;16364:7;16348:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16348:24:4;;;;;;;;;;;;;;;;;;;;;;16218:161;:::o;43271:465:6:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:6;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;11688:171:4:-;11787:1;11751:38;;:15;:24;11767:7;11751:24;;;;;;;;;;;;;;;;;;;;;:38;;;11747:106;;11840:1;11805:15;:24;11821:7;11805:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11747:106;11688:171;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:6:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:6;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;325:1915:7:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;161:608;;272:3;265:4;257:6;253:17;249:27;239:2;;290:1;287;280:12;239:2;314:4;333:74;348:58;399:6;348:58;;;333:74;;;324:83;;424:5;483:6;530:3;522:4;514:6;510:17;505:3;501:27;498:36;495:2;;;547:1;544;537:12;495:2;572:1;557:206;582:6;579:1;576:13;557:206;;;640:3;662:37;695:3;683:10;662:37;;;657:3;650:50;723:4;718:3;714:14;707:21;;751:4;746:3;742:14;735:21;;614:149;604:1;601;597:9;592:14;;557:206;;;561:14;232:537;;;;;;;;796:616;;911:3;904:4;896:6;892:17;888:27;878:2;;929:1;926;919:12;878:2;953:4;972:78;987:62;1042:6;987:62;;;972:78;;;963:87;;1067:5;1126:6;1173:3;1165:4;1157:6;1153:17;1148:3;1144:27;1141:36;1138:2;;;1190:1;1187;1180:12;1138:2;1215:1;1200:206;1225:6;1222:1;1219:13;1200:206;;;1283:3;1305:37;1338:3;1326:10;1305:37;;;1300:3;1293:50;1366:4;1361:3;1357:14;1350:21;;1394:4;1389:3;1385:14;1378:21;;1257:149;1247:1;1244;1240:9;1235:14;;1200:206;;;1204:14;871:541;;;;;;;;1420:124;;1497:6;1484:20;1475:29;;1509:30;1533:5;1509:30;;;1469:75;;;;;1551:128;;1632:6;1626:13;1617:22;;1644:30;1668:5;1644:30;;;1611:68;;;;;1686:130;;1766:6;1753:20;1744:29;;1778:33;1805:5;1778:33;;;1738:78;;;;;1823:128;;1902:6;1889:20;1880:29;;1914:32;1940:5;1914:32;;;1874:77;;;;;1958:132;;2041:6;2035:13;2026:22;;2053:32;2079:5;2053:32;;;2020:70;;;;;2098:440;;2199:3;2192:4;2184:6;2180:17;2176:27;2166:2;;2217:1;2214;2207:12;2166:2;2254:6;2241:20;2276:64;2291:48;2332:6;2291:48;;;2276:64;;;2267:73;;2360:6;2353:5;2346:21;2396:4;2388:6;2384:17;2429:4;2422:5;2418:16;2464:3;2455:6;2450:3;2446:16;2443:25;2440:2;;;2481:1;2478;2471:12;2440:2;2491:41;2525:6;2520:3;2515;2491:41;;;2159:379;;;;;;;;2547:442;;2649:3;2642:4;2634:6;2630:17;2626:27;2616:2;;2667:1;2664;2657:12;2616:2;2704:6;2691:20;2726:65;2741:49;2783:6;2741:49;;;2726:65;;;2717:74;;2811:6;2804:5;2797:21;2847:4;2839:6;2835:17;2880:4;2873:5;2869:16;2915:3;2906:6;2901:3;2897:16;2894:25;2891:2;;;2932:1;2929;2922:12;2891:2;2942:41;2976:6;2971:3;2966;2942:41;;;2609:380;;;;;;;;3026:457;;3136:4;3124:9;3119:3;3115:19;3111:30;3108:2;;;3154:1;3151;3144:12;3108:2;3172:20;3187:4;3172:20;;;3163:29;;3239:1;3271:49;3316:3;3307:6;3296:9;3292:22;3271:49;;;3264:4;3257:5;3253:16;3246:75;3202:130;3379:2;3412:49;3457:3;3448:6;3437:9;3433:22;3412:49;;;3405:4;3398:5;3394:16;3387:75;3342:131;3102:381;;;;;3519:495;;3629:4;3617:9;3612:3;3608:19;3604:30;3601:2;;;3647:1;3644;3637:12;3601:2;3665:20;3680:4;3665:20;;;3656:29;;3732:1;3764:68;3828:3;3819:6;3808:9;3804:22;3764:68;;;3757:4;3750:5;3746:16;3739:94;3695:149;3891:2;3924:68;3988:3;3979:6;3968:9;3964:22;3924:68;;;3917:4;3910:5;3906:16;3899:94;3854:150;3595:419;;;;;4049:666;;4161:6;4149:9;4144:3;4140:19;4136:32;4133:2;;;4181:1;4178;4171:12;4133:2;4199:20;4214:4;4199:20;;;4190:29;;4266:1;4298:70;4364:3;4355:6;4344:9;4340:22;4298:70;;;4291:4;4284:5;4280:16;4273:96;4229:151;4427:2;4460:70;4526:3;4517:6;4506:9;4502:22;4460:70;;;4453:4;4446:5;4442:16;4435:96;4390:152;4589:3;4623:70;4689:3;4680:6;4669:9;4665:22;4623:70;;;4616:4;4609:5;4605:16;4598:96;4552:153;4127:588;;;;;4722:130;;4802:6;4789:20;4780:29;;4814:33;4841:5;4814:33;;;4774:78;;;;;4859:241;;4963:2;4951:9;4942:7;4938:23;4934:32;4931:2;;;4979:1;4976;4969:12;4931:2;5014:1;5031:53;5076:7;5067:6;5056:9;5052:22;5031:53;;;5021:63;;4993:97;4925:175;;;;;5107:366;;;5228:2;5216:9;5207:7;5203:23;5199:32;5196:2;;;5244:1;5241;5234:12;5196:2;5279:1;5296:53;5341:7;5332:6;5321:9;5317:22;5296:53;;;5286:63;;5258:97;5386:2;5404:53;5449:7;5440:6;5429:9;5425:22;5404:53;;;5394:63;;5365:98;5190:283;;;;;;5480:491;;;;5618:2;5606:9;5597:7;5593:23;5589:32;5586:2;;;5634:1;5631;5624:12;5586:2;5669:1;5686:53;5731:7;5722:6;5711:9;5707:22;5686:53;;;5676:63;;5648:97;5776:2;5794:53;5839:7;5830:6;5819:9;5815:22;5794:53;;;5784:63;;5755:98;5884:2;5902:53;5947:7;5938:6;5927:9;5923:22;5902:53;;;5892:63;;5863:98;5580:391;;;;;;5978:721;;;;;6142:3;6130:9;6121:7;6117:23;6113:33;6110:2;;;6159:1;6156;6149:12;6110:2;6194:1;6211:53;6256:7;6247:6;6236:9;6232:22;6211:53;;;6201:63;;6173:97;6301:2;6319:53;6364:7;6355:6;6344:9;6340:22;6319:53;;;6309:63;;6280:98;6409:2;6427:53;6472:7;6463:6;6452:9;6448:22;6427:53;;;6417:63;;6388:98;6545:2;6534:9;6530:18;6517:32;6569:18;6561:6;6558:30;6555:2;;;6601:1;6598;6591:12;6555:2;6621:62;6675:7;6666:6;6655:9;6651:22;6621:62;;;6611:72;;6496:193;6104:595;;;;;;;;6706:360;;;6824:2;6812:9;6803:7;6799:23;6795:32;6792:2;;;6840:1;6837;6830:12;6792:2;6875:1;6892:53;6937:7;6928:6;6917:9;6913:22;6892:53;;;6882:63;;6854:97;6982:2;7000:50;7042:7;7033:6;7022:9;7018:22;7000:50;;;6990:60;;6961:95;6786:280;;;;;;7073:366;;;7194:2;7182:9;7173:7;7169:23;7165:32;7162:2;;;7210:1;7207;7200:12;7162:2;7245:1;7262:53;7307:7;7298:6;7287:9;7283:22;7262:53;;;7252:63;;7224:97;7352:2;7370:53;7415:7;7406:6;7395:9;7391:22;7370:53;;;7360:63;;7331:98;7156:283;;;;;;7446:710;;;;;7647:3;7635:9;7626:7;7622:23;7618:33;7615:2;;;7664:1;7661;7654:12;7615:2;7699:1;7716:53;7761:7;7752:6;7741:9;7737:22;7716:53;;;7706:63;;7678:97;7806:2;7824:53;7869:7;7860:6;7849:9;7845:22;7824:53;;;7814:63;;7785:98;7914:2;7932:76;8000:7;7991:6;7980:9;7976:22;7932:76;;;7922:86;;7893:121;8045:3;8064:76;8132:7;8123:6;8112:9;8108:22;8064:76;;;8054:86;;8024:122;7609:547;;;;;;;;8163:235;;8264:2;8252:9;8243:7;8239:23;8235:32;8232:2;;;8280:1;8277;8270:12;8232:2;8315:1;8332:50;8374:7;8365:6;8354:9;8350:22;8332:50;;;8322:60;;8294:94;8226:172;;;;;8405:257;;8517:2;8505:9;8496:7;8492:23;8488:32;8485:2;;;8533:1;8530;8523:12;8485:2;8568:1;8585:61;8638:7;8629:6;8618:9;8614:22;8585:61;;;8575:71;;8547:105;8479:183;;;;;8669:472;;;8800:2;8788:9;8779:7;8775:23;8771:32;8768:2;;;8816:1;8813;8806:12;8768:2;8851:1;8868:53;8913:7;8904:6;8893:9;8889:22;8868:53;;;8858:63;;8830:97;8986:2;8975:9;8971:18;8958:32;9010:18;9002:6;8999:30;8996:2;;;9042:1;9039;9032:12;8996:2;9062:63;9117:7;9108:6;9097:9;9093:22;9062:63;;;9052:73;;8937:194;8762:379;;;;;;9148:701;;;;9305:2;9293:9;9284:7;9280:23;9276:32;9273:2;;;9321:1;9318;9311:12;9273:2;9356:1;9373:53;9418:7;9409:6;9398:9;9394:22;9373:53;;;9363:63;;9335:97;9491:2;9480:9;9476:18;9463:32;9515:18;9507:6;9504:30;9501:2;;;9547:1;9544;9537:12;9501:2;9567:63;9622:7;9613:6;9602:9;9598:22;9567:63;;;9557:73;;9442:194;9695:2;9684:9;9680:18;9667:32;9719:18;9711:6;9708:30;9705:2;;;9751:1;9748;9741:12;9705:2;9771:62;9825:7;9816:6;9805:9;9801:22;9771:62;;;9761:72;;9646:193;9267:582;;;;;;9856:239;;9959:2;9947:9;9938:7;9934:23;9930:32;9927:2;;;9975:1;9972;9965:12;9927:2;10010:1;10027:52;10071:7;10062:6;10051:9;10047:22;10027:52;;;10017:62;;9989:96;9921:174;;;;;10102:261;;10216:2;10204:9;10195:7;10191:23;10187:32;10184:2;;;10232:1;10229;10222:12;10184:2;10267:1;10284:63;10339:7;10330:6;10319:9;10315:22;10284:63;;;10274:73;;10246:107;10178:185;;;;;10370:241;;10474:2;10462:9;10453:7;10449:23;10445:32;10442:2;;;10490:1;10487;10480:12;10442:2;10525:1;10542:53;10587:7;10578:6;10567:9;10563:22;10542:53;;;10532:63;;10504:97;10436:175;;;;;10619:173;;10706:46;10748:3;10740:6;10706:46;;;10781:4;10776:3;10772:14;10758:28;;10699:93;;;;;10800:142;10891:45;10930:5;10891:45;;;10886:3;10879:58;10873:69;;;10949:113;11032:24;11050:5;11032:24;;;11027:3;11020:37;11014:48;;;11069:152;11170:45;11190:24;11208:5;11190:24;;;11170:45;;;11165:3;11158:58;11152:69;;;11261:660;11394:52;11440:5;11394:52;;;11459:84;11536:6;11531:3;11459:84;;;11452:91;;11564:54;11612:5;11564:54;;;11638:7;11666:1;11651:258;11676:6;11673:1;11670:13;11651:258;;;11743:6;11737:13;11764:63;11823:3;11808:13;11764:63;;;11757:70;;11844:58;11895:6;11844:58;;;11834:68;;11708:201;11698:1;11695;11691:9;11686:14;;11651:258;;;11655:14;11373:548;;;;;;11962:624;12081:48;12123:5;12081:48;;;12142:74;12209:6;12204:3;12142:74;;;12135:81;;12237:50;12281:5;12237:50;;;12307:7;12335:1;12320:254;12345:6;12342:1;12339:13;12320:254;;;12412:6;12406:13;12433:63;12492:3;12477:13;12433:63;;;12426:70;;12513:54;12560:6;12513:54;;;12503:64;;12377:197;12367:1;12364;12360:9;12355:14;;12320:254;;;12324:14;12060:526;;;;;;12594:104;12671:21;12686:5;12671:21;;;12666:3;12659:34;12653:45;;;12705:343;;12815:38;12847:5;12815:38;;;12865:70;12928:6;12923:3;12865:70;;;12858:77;;12940:52;12985:6;12980:3;12973:4;12966:5;12962:16;12940:52;;;13013:29;13035:6;13013:29;;;13008:3;13004:39;12997:46;;12795:253;;;;;;13055:347;;13167:39;13200:5;13167:39;;;13218:71;13282:6;13277:3;13218:71;;;13211:78;;13294:52;13339:6;13334:3;13327:4;13320:5;13316:16;13294:52;;;13367:29;13389:6;13367:29;;;13362:3;13358:39;13351:46;;13147:255;;;;;;13410:321;;13570:67;13634:2;13629:3;13570:67;;;13563:74;;13670:23;13666:1;13661:3;13657:11;13650:44;13722:2;13717:3;13713:12;13706:19;;13556:175;;;;13740:381;;13900:67;13964:2;13959:3;13900:67;;;13893:74;;14000:34;13996:1;13991:3;13987:11;13980:55;14069:14;14064:2;14059:3;14055:12;14048:36;14112:2;14107:3;14103:12;14096:19;;13886:235;;;;14130:322;;14290:67;14354:2;14349:3;14290:67;;;14283:74;;14390:24;14386:1;14381:3;14377:11;14370:45;14443:2;14438:3;14434:12;14427:19;;14276:176;;;;14461:389;;14621:67;14685:2;14680:3;14621:67;;;14614:74;;14721:34;14717:1;14712:3;14708:11;14701:55;14790:22;14785:2;14780:3;14776:12;14769:44;14841:2;14836:3;14832:12;14825:19;;14607:243;;;;14859:321;;15019:67;15083:2;15078:3;15019:67;;;15012:74;;15119:23;15115:1;15110:3;15106:11;15099:44;15171:2;15166:3;15162:12;15155:19;;15005:175;;;;15189:316;;15349:67;15413:2;15408:3;15349:67;;;15342:74;;15449:18;15445:1;15440:3;15436:11;15429:39;15496:2;15491:3;15487:12;15480:19;;15335:170;;;;15514:317;;15674:67;15738:2;15733:3;15674:67;;;15667:74;;15774:19;15770:1;15765:3;15761:11;15754:40;15822:2;15817:3;15813:12;15806:19;;15660:171;;;;15840:465;;16000:67;16064:2;16059:3;16000:67;;;15993:74;;16100:34;16096:1;16091:3;16087:11;16080:55;16169:34;16164:2;16159:3;16155:12;16148:56;16238:29;16233:2;16228:3;16224:12;16217:51;16296:2;16291:3;16287:12;16280:19;;15986:319;;;;16314:323;;16474:67;16538:2;16533:3;16474:67;;;16467:74;;16574:25;16570:1;16565:3;16561:11;16554:46;16628:2;16623:3;16619:12;16612:19;;16460:177;;;;16646:332;;16806:67;16870:2;16865:3;16806:67;;;16799:74;;16906:34;16902:1;16897:3;16893:11;16886:55;16969:2;16964:3;16960:12;16953:19;;16792:186;;;;16987:318;;17147:67;17211:2;17206:3;17147:67;;;17140:74;;17247:20;17243:1;17238:3;17234:11;17227:41;17296:2;17291:3;17287:12;17280:19;;17133:172;;;;17368:456;17497:4;17492:3;17488:14;17577:4;17570:5;17566:16;17560:23;17589:63;17646:4;17641:3;17637:14;17623:12;17589:63;;;17517:141;17728:4;17721:5;17717:16;17711:23;17740:63;17797:4;17792:3;17788:14;17774:12;17740:63;;;17668:141;17470:354;;;;17886:540;18015:4;18010:3;18006:14;18095:4;18088:5;18084:16;18078:23;18107:105;18206:4;18201:3;18197:14;18183:12;18107:105;;;18035:183;18288:4;18281:5;18277:16;18271:23;18300:105;18399:4;18394:3;18390:14;18376:12;18300:105;;;18228:183;17988:438;;;;18486:757;18625:6;18620:3;18616:16;18707:4;18700:5;18696:16;18690:23;18719:109;18822:4;18817:3;18813:14;18799:12;18719:109;;;18647:187;18904:4;18897:5;18893:16;18887:23;18916:109;19019:4;19014:3;19010:14;18996:12;18916:109;;;18844:187;19101:4;19094:5;19090:16;19084:23;19113:109;19216:4;19211:3;19207:14;19193:12;19113:109;;;19041:187;18598:645;;;;19250:103;19323:24;19341:5;19323:24;;;19318:3;19311:37;19305:48;;;19360:113;19443:24;19461:5;19443:24;;;19438:3;19431:37;19425:48;;;19480:152;19581:45;19601:24;19619:5;19601:24;;;19581:45;;;19576:3;19569:58;19563:69;;;19639:383;;19786:75;19857:3;19848:6;19786:75;;;19883:2;19878:3;19874:12;19867:19;;19897:75;19968:3;19959:6;19897:75;;;19994:2;19989:3;19985:12;19978:19;;20014:3;20007:10;;19774:248;;;;;;20029:213;;20147:2;20136:9;20132:18;20124:26;;20161:71;20229:1;20218:9;20214:17;20205:6;20161:71;;;20118:124;;;;;20249:229;;20375:2;20364:9;20360:18;20352:26;;20389:79;20465:1;20454:9;20450:17;20441:6;20389:79;;;20346:132;;;;;20485:647;;20713:3;20702:9;20698:19;20690:27;;20728:79;20804:1;20793:9;20789:17;20780:6;20728:79;;;20818:72;20886:2;20875:9;20871:18;20862:6;20818:72;;;20901;20969:2;20958:9;20954:18;20945:6;20901:72;;;21021:9;21015:4;21011:20;21006:2;20995:9;20991:18;20984:48;21046:76;21117:4;21108:6;21046:76;;;21038:84;;20684:448;;;;;;;;21139:201;;21251:2;21240:9;21236:18;21228:26;;21265:65;21327:1;21316:9;21312:17;21303:6;21265:65;;;21222:118;;;;;21347:301;;21485:2;21474:9;21470:18;21462:26;;21535:9;21529:4;21525:20;21521:1;21510:9;21506:17;21499:47;21560:78;21633:4;21624:6;21560:78;;;21552:86;;21456:192;;;;;21655:407;;21846:2;21835:9;21831:18;21823:26;;21896:9;21890:4;21886:20;21882:1;21871:9;21867:17;21860:47;21921:131;22047:4;21921:131;;;21913:139;;21817:245;;;;22069:407;;22260:2;22249:9;22245:18;22237:26;;22310:9;22304:4;22300:20;22296:1;22285:9;22281:17;22274:47;22335:131;22461:4;22335:131;;;22327:139;;22231:245;;;;22483:407;;22674:2;22663:9;22659:18;22651:26;;22724:9;22718:4;22714:20;22710:1;22699:9;22695:17;22688:47;22749:131;22875:4;22749:131;;;22741:139;;22645:245;;;;22897:407;;23088:2;23077:9;23073:18;23065:26;;23138:9;23132:4;23128:20;23124:1;23113:9;23109:17;23102:47;23163:131;23289:4;23163:131;;;23155:139;;23059:245;;;;23311:407;;23502:2;23491:9;23487:18;23479:26;;23552:9;23546:4;23542:20;23538:1;23527:9;23523:17;23516:47;23577:131;23703:4;23577:131;;;23569:139;;23473:245;;;;23725:407;;23916:2;23905:9;23901:18;23893:26;;23966:9;23960:4;23956:20;23952:1;23941:9;23937:17;23930:47;23991:131;24117:4;23991:131;;;23983:139;;23887:245;;;;24139:407;;24330:2;24319:9;24315:18;24307:26;;24380:9;24374:4;24370:20;24366:1;24355:9;24351:17;24344:47;24405:131;24531:4;24405:131;;;24397:139;;24301:245;;;;24553:407;;24744:2;24733:9;24729:18;24721:26;;24794:9;24788:4;24784:20;24780:1;24769:9;24765:17;24758:47;24819:131;24945:4;24819:131;;;24811:139;;24715:245;;;;24967:407;;25158:2;25147:9;25143:18;25135:26;;25208:9;25202:4;25198:20;25194:1;25183:9;25179:17;25172:47;25233:131;25359:4;25233:131;;;25225:139;;25129:245;;;;25381:407;;25572:2;25561:9;25557:18;25549:26;;25622:9;25616:4;25612:20;25608:1;25597:9;25593:17;25586:47;25647:131;25773:4;25647:131;;;25639:139;;25543:245;;;;25795:407;;25986:2;25975:9;25971:18;25963:26;;26036:9;26030:4;26026:20;26022:1;26011:9;26007:17;26000:47;26061:131;26187:4;26061:131;;;26053:139;;25957:245;;;;26209:510;;26447:3;26436:9;26432:19;26424:27;;26462:117;26576:1;26565:9;26561:17;26552:6;26462:117;;;26590:119;26704:3;26693:9;26689:19;26680:6;26590:119;;;26418:301;;;;;;26726:213;;26844:2;26833:9;26829:18;26821:26;;26858:71;26926:1;26915:9;26911:17;26902:6;26858:71;;;26815:124;;;;;26946:324;;27092:2;27081:9;27077:18;27069:26;;27106:71;27174:1;27163:9;27159:17;27150:6;27106:71;;;27188:72;27256:2;27245:9;27241:18;27232:6;27188:72;;;27063:207;;;;;;27277:256;;27339:2;27333:9;27323:19;;27377:4;27369:6;27365:17;27476:6;27464:10;27461:22;27440:18;27428:10;27425:34;27422:62;27419:2;;;27497:1;27494;27487:12;27419:2;27517:10;27513:2;27506:22;27317:216;;;;;27540:240;;27693:18;27685:6;27682:30;27679:2;;;27725:1;27722;27715:12;27679:2;27760:4;27752:6;27748:17;27740:25;;27616:164;;;;27787:244;;27944:18;27936:6;27933:30;27930:2;;;27976:1;27973;27966:12;27930:2;28011:4;28003:6;27999:17;27991:25;;27867:164;;;;28038:321;;28181:18;28173:6;28170:30;28167:2;;;28213:1;28210;28203:12;28167:2;28280:4;28276:9;28269:4;28261:6;28257:17;28253:33;28245:41;;28344:4;28338;28334:15;28326:23;;28104:255;;;;28366:322;;28510:18;28502:6;28499:30;28496:2;;;28542:1;28539;28532:12;28496:2;28609:4;28605:9;28598:4;28590:6;28586:17;28582:33;28574:41;;28673:4;28667;28663:15;28655:23;;28433:255;;;;28695:93;;28775:3;28767:11;;28761:27;;;;28795:97;;28879:3;28871:11;;28865:27;;;;28899:104;;28989:4;28979:14;;28967:36;;;;29010:108;;29104:4;29094:14;;29082:36;;;;29125:121;;29218:5;29212:12;29202:22;;29183:63;;;;29253:122;;29347:5;29341:12;29331:22;;29312:63;;;;29382:102;;29474:4;29469:3;29465:14;29457:22;;29451:33;;;;29491:106;;29587:4;29582:3;29578:14;29570:22;;29564:33;;;;29605:130;;29726:3;29711:18;;29704:31;;;;;29744:140;;29875:3;29860:18;;29853:31;;;;;29893:162;;30007:6;30002:3;29995:19;30044:4;30039:3;30035:14;30020:29;;29988:67;;;;;30064:163;;30179:6;30174:3;30167:19;30216:4;30211:3;30207:14;30192:29;;30160:67;;;;;30235:91;;30297:24;30315:5;30297:24;;;30286:35;;30280:46;;;;30333:85;;30406:5;30399:13;30392:21;30381:32;;30375:43;;;;30425:72;;30487:5;30476:16;;30470:27;;;;30504:144;;30576:66;30569:5;30565:78;30554:89;;30548:100;;;;30655:121;;30728:42;30721:5;30717:54;30706:65;;30700:76;;;;30783:72;;30845:5;30834:16;;30828:27;;;;30862:129;;30949:37;30980:5;30949:37;;;30936:50;;30930:61;;;;30998:121;;31077:37;31108:5;31077:37;;;31064:50;;31058:61;;;;31126:108;;31205:24;31223:5;31205:24;;;31192:37;;31186:48;;;;31242:145;31323:6;31318:3;31313;31300:30;31379:1;31370:6;31365:3;31361:16;31354:27;31293:94;;;;31396:268;31461:1;31468:101;31482:6;31479:1;31476:13;31468:101;;;31558:1;31553:3;31549:11;31543:18;31539:1;31534:3;31530:11;31523:39;31504:2;31501:1;31497:10;31492:15;;31468:101;;;31584:6;31581:1;31578:13;31575:2;;;31649:1;31640:6;31635:3;31631:16;31624:27;31575:2;31445:219;;;;;31672:95;;31736:26;31756:5;31736:26;;;31725:37;;31719:48;;;;31774:89;;31838:20;31852:5;31838:20;;;31827:31;;31821:42;;;;31870:74;;31934:5;31923:16;;31917:27;;;;31951:97;;32039:2;32035:7;32030:2;32023:5;32019:14;32015:28;32005:38;;31999:49;;;;32056:94;;32134:5;32130:2;32126:14;32104:36;;32098:52;;;;32158:117;32227:24;32245:5;32227:24;;;32220:5;32217:35;32207:2;;32266:1;32263;32256:12;32207:2;32201:74;;32282:111;32348:21;32363:5;32348:21;;;32341:5;32338:32;32328:2;;32384:1;32381;32374:12;32328:2;32322:71;;32400:117;32469:24;32487:5;32469:24;;;32462:5;32459:35;32449:2;;32508:1;32505;32498:12;32449:2;32443:74;;32524:115;32592:23;32609:5;32592:23;;;32585:5;32582:34;32572:2;;32630:1;32627;32620:12;32572:2;32566:73;;32646:117;32715:24;32733:5;32715:24;;;32708:5;32705:35;32695:2;;32754:1;32751;32744:12;32695:2;32689:74;",
  "source": "pragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport \"./verifier.sol\";\nimport \"./ERC721Mintable.sol\";\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token {\n    Verifier verifier = new Verifier();\n\n// TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        uint256 index;\n        address solutionAddress;\n    }\n\n// TODO define an array of the above struct\n    Solution[] private solutions;\n\n// TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => Solution) uniqueSolutions;\n\n// TODO Create an event to emit when a solution is added\n    event SolutionAdded(uint256 index, address solutionAddress);\n\n    constructor (string memory name, string memory symbol) public CustomERC721Token(name, symbol) {}\n    \n// TODO Create a function to add the solutions to the array and emit the event\n    function _addSolution(uint256 index, address solutionAddress) internal {\n        Solution memory solution = Solution({index: index,\n                                            solutionAddress: solutionAddress});\n\n        solutions.push(solution);\n\n        bytes32 key = keccak256(abi.encodePacked(index, solutionAddress));\n        uniqueSolutions[key] = solution;\n\n        emit SolutionAdded(index, solutionAddress);\n    }\n\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuplly\n    function mintNFT(address to, \n                    uint256 tokenId,\n                    Verifier.Proof memory proof, \n                    uint[2] memory input) \n                    public \n                    onlyOwner {\n        require(verifier.verifyTx(proof, input), \"Proof is invalid\");\n\n        bytes32 key = keccak256(abi.encodePacked(tokenId, to));\n        require(uniqueSolutions[key].solutionAddress == address(0), \"Solution already exists\");\n\n        super.mint(to, tokenId);\n        _addSolution(tokenId, to);\n    }\n}",
  "sourcePath": "/Users/duydo/Projects/Crypto/Udacity/udacity-blockchain-developer-nanodegree/5. Real Estate Marketplace/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7925
      ]
    },
    "id": 7926,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7783,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "id": 7784,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:7"
      },
      {
        "absolutePath": "project:/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7785,
        "nodeType": "ImportDirective",
        "scope": 7926,
        "sourceUnit": 8848,
        "src": "166:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7786,
        "nodeType": "ImportDirective",
        "scope": 7926,
        "sourceUnit": 1457,
        "src": "191:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7787,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1456,
              "src": "356:17:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1456",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7788,
            "nodeType": "InheritanceSpecifier",
            "src": "356:17:7"
          }
        ],
        "contractDependencies": [
          398,
          471,
          517,
          1003,
          1301,
          1410,
          1456,
          7781,
          8847
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7925,
        "linearizedBaseContracts": [
          7925,
          1456,
          1410,
          7781,
          1301,
          1003,
          517,
          471,
          398
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7793,
            "name": "verifier",
            "nodeType": "VariableDeclaration",
            "scope": 7925,
            "src": "380:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8847",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7789,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8847,
              "src": "380:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8847",
                "typeString": "contract Verifier"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 7791,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "400:12:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Verifier_$8847_$",
                  "typeString": "function () returns (contract Verifier)"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 7790,
                  "name": "Verifier",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 8847,
                  "src": "404:8:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Verifier_$8847",
                    "typeString": "contract Verifier"
                  }
                }
              },
              "id": 7792,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "400:14:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8847",
                "typeString": "contract Verifier"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7798,
            "members": [
              {
                "constant": false,
                "id": 7795,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7798,
                "src": "517:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7794,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "517:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7797,
                "name": "solutionAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7798,
                "src": "540:23:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7796,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "540:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7925,
            "src": "491:79:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7801,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7925,
            "src": "620:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7798_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7799,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7798,
                "src": "620:8:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7798_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7800,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "620:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7798_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7805,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7925,
            "src": "716:44:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7798_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7804,
              "keyType": {
                "id": 7802,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "724:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "716:28:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7798_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7803,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7798,
                "src": "735:8:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7798_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7811,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7807,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7811,
                  "src": "844:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7809,
                  "indexed": false,
                  "name": "solutionAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7811,
                  "src": "859:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "843:40:7"
            },
            "src": "824:60:7"
          },
          {
            "body": {
              "id": 7822,
              "nodeType": "Block",
              "src": "984:2:7",
              "statements": []
            },
            "documentation": null,
            "id": 7823,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7818,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7813,
                    "src": "970:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7819,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7815,
                    "src": "976:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7820,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7817,
                  "name": "CustomERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1456,
                  "src": "952:17:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CustomERC721Token_$1456_$",
                    "typeString": "type(contract CustomERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "952:31:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7813,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7823,
                  "src": "903:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7812,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7815,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7823,
                  "src": "923:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7814,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "902:42:7"
            },
            "returnParameters": {
              "id": 7821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "984:0:7"
            },
            "scope": 7925,
            "src": "890:96:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7864,
              "nodeType": "Block",
              "src": "1146:351:7",
              "statements": [
                {
                  "assignments": [
                    7831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7831,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7864,
                      "src": "1156:24:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7798_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7830,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7798,
                        "src": "1156:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7798_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7836,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7833,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7825,
                        "src": "1200:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7834,
                        "name": "solutionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7827,
                        "src": "1268:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7832,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7798,
                      "src": "1183:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7798_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "index",
                      "solutionAddress"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1183:102:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7798_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1156:129:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7840,
                        "name": "solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7831,
                        "src": "1311:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7798_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7798_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7837,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7801,
                        "src": "1296:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7798_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1296:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7798_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1296:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7842,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:24:7"
                },
                {
                  "assignments": [
                    7844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7844,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7864,
                      "src": "1331:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7843,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1331:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7852,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7848,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7825,
                            "src": "1372:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7849,
                            "name": "solutionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7827,
                            "src": "1379:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7846,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8849,
                            "src": "1355:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1355:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1355:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7845,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8856,
                      "src": "1345:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1345:51:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1331:65:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7853,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7805,
                        "src": "1406:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7798_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7855,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7854,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7844,
                        "src": "1422:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1406:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7798_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7856,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7831,
                      "src": "1429:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7798_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1406:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7798_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7858,
                  "nodeType": "ExpressionStatement",
                  "src": "1406:31:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7860,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7825,
                        "src": "1467:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7861,
                        "name": "solutionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7827,
                        "src": "1474:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7859,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7811,
                      "src": "1453:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1453:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7863,
                  "nodeType": "EmitStatement",
                  "src": "1448:42:7"
                }
              ]
            },
            "documentation": null,
            "id": 7865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7825,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7865,
                  "src": "1097:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7827,
                  "name": "solutionAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7865,
                  "src": "1112:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1096:40:7"
            },
            "returnParameters": {
              "id": 7829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:0:7"
            },
            "scope": 7925,
            "src": "1075:422:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7923,
              "nodeType": "Block",
              "src": "1931:307:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7883,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7871,
                            "src": "1967:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8521_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7884,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "1974:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8521_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7881,
                            "name": "verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7793,
                            "src": "1949:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$8847",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8846,
                          "src": "1949:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8521_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                          }
                        },
                        "id": 7885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1949:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f6f6620697320696e76616c6964",
                        "id": 7886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1982:18:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59fda354a161da9bd8f41f9eb224a899ce67e96791830e1d77290e7ae7b62920",
                          "typeString": "literal_string \"Proof is invalid\""
                        },
                        "value": "Proof is invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59fda354a161da9bd8f41f9eb224a899ce67e96791830e1d77290e7ae7b62920",
                          "typeString": "literal_string \"Proof is invalid\""
                        }
                      ],
                      "id": 7880,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8865,
                        8866
                      ],
                      "referencedDeclaration": 8866,
                      "src": "1941:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:60:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7888,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:60:7"
                },
                {
                  "assignments": [
                    7890
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7890,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7923,
                      "src": "2012:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7889,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2012:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7898,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7894,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7869,
                            "src": "2053:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7895,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7867,
                            "src": "2062:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7892,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8849,
                            "src": "2036:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2036:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2036:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7891,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8856,
                      "src": "2026:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2026:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2012:54:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7900,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7805,
                              "src": "2084:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7798_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7902,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7901,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7890,
                              "src": "2100:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2084:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7798_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7903,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "solutionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7797,
                          "src": "2084:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2132:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2124:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2124:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2084:50:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c726561647920657869737473",
                        "id": 7908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2136:25:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        },
                        "value": "Solution already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        }
                      ],
                      "id": 7899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8865,
                        8866
                      ],
                      "referencedDeclaration": 8866,
                      "src": "2076:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:86:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7910,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:86:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7914,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7867,
                        "src": "2184:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7915,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7869,
                        "src": "2188:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7911,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8917,
                        "src": "2173:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7925",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1455,
                      "src": "2173:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2173:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7917,
                  "nodeType": "ExpressionStatement",
                  "src": "2173:23:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7919,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7869,
                        "src": "2219:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7920,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7867,
                        "src": "2228:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7918,
                      "name": "_addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7865,
                      "src": "2206:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2206:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7922,
                  "nodeType": "ExpressionStatement",
                  "src": "2206:25:7"
                }
              ]
            },
            "documentation": null,
            "id": 7924,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7878,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7877,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 360,
                  "src": "1921:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1921:9:7"
              }
            ],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7867,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7924,
                  "src": "1730:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7869,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7924,
                  "src": "1763:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7871,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7924,
                  "src": "1800:27:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8521_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7870,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8521,
                    "src": "1800:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8521_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7875,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7924,
                  "src": "1850:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7872,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1850:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7874,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1855:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1850:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1729:142:7"
            },
            "returnParameters": {
              "id": 7879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1931:0:7"
            },
            "scope": 7925,
            "src": "1713:525:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7926,
        "src": "325:1915:7"
      }
    ],
    "src": "0:2240:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7925
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 7783,
        "name": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7784,
        "name": "PragmaDirective",
        "src": "24:33:7"
      },
      {
        "attributes": {
          "SourceUnit": 8848,
          "absolutePath": "project:/contracts/verifier.sol",
          "file": "./verifier.sol",
          "scope": 7926,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7785,
        "name": "ImportDirective",
        "src": "166:24:7"
      },
      {
        "attributes": {
          "SourceUnit": 1457,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7926,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7786,
        "name": "ImportDirective",
        "src": "191:30:7"
      },
      {
        "attributes": {
          "contractDependencies": [
            398,
            471,
            517,
            1003,
            1301,
            1410,
            1456,
            7781,
            8847
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7925,
            1456,
            1410,
            7781,
            1301,
            1003,
            517,
            471,
            398
          ],
          "name": "SolnSquareVerifier",
          "scope": 7926
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1456,
                  "type": "contract CustomERC721Token"
                },
                "id": 7787,
                "name": "UserDefinedTypeName",
                "src": "356:17:7"
              }
            ],
            "id": 7788,
            "name": "InheritanceSpecifier",
            "src": "356:17:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "verifier",
              "scope": 7925,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Verifier",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 8847,
                  "type": "contract Verifier"
                },
                "id": 7789,
                "name": "UserDefinedTypeName",
                "src": "380:8:7"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "arguments": [
                    null
                  ],
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "type": "contract Verifier",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        null
                      ],
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "type": "function () returns (contract Verifier)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Verifier",
                          "referencedDeclaration": 8847,
                          "type": "contract Verifier"
                        },
                        "id": 7790,
                        "name": "UserDefinedTypeName",
                        "src": "404:8:7"
                      }
                    ],
                    "id": 7791,
                    "name": "NewExpression",
                    "src": "400:12:7"
                  }
                ],
                "id": 7792,
                "name": "FunctionCall",
                "src": "400:14:7"
              }
            ],
            "id": 7793,
            "name": "VariableDeclaration",
            "src": "380:34:7"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7925,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7798,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7794,
                    "name": "ElementaryTypeName",
                    "src": "517:7:7"
                  }
                ],
                "id": 7795,
                "name": "VariableDeclaration",
                "src": "517:13:7"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "solutionAddress",
                  "scope": 7798,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7796,
                    "name": "ElementaryTypeName",
                    "src": "540:7:7"
                  }
                ],
                "id": 7797,
                "name": "VariableDeclaration",
                "src": "540:23:7"
              }
            ],
            "id": 7798,
            "name": "StructDefinition",
            "src": "491:79:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7925,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7798,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7799,
                    "name": "UserDefinedTypeName",
                    "src": "620:8:7"
                  }
                ],
                "id": 7800,
                "name": "ArrayTypeName",
                "src": "620:10:7"
              }
            ],
            "id": 7801,
            "name": "VariableDeclaration",
            "src": "620:28:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "uniqueSolutions",
              "scope": 7925,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7802,
                    "name": "ElementaryTypeName",
                    "src": "724:7:7"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7798,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7803,
                    "name": "UserDefinedTypeName",
                    "src": "735:8:7"
                  }
                ],
                "id": 7804,
                "name": "Mapping",
                "src": "716:28:7"
              }
            ],
            "id": 7805,
            "name": "VariableDeclaration",
            "src": "716:44:7"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "index",
                      "scope": 7811,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7806,
                        "name": "ElementaryTypeName",
                        "src": "844:7:7"
                      }
                    ],
                    "id": 7807,
                    "name": "VariableDeclaration",
                    "src": "844:13:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "solutionAddress",
                      "scope": 7811,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7808,
                        "name": "ElementaryTypeName",
                        "src": "859:7:7"
                      }
                    ],
                    "id": 7809,
                    "name": "VariableDeclaration",
                    "src": "859:23:7"
                  }
                ],
                "id": 7810,
                "name": "ParameterList",
                "src": "843:40:7"
              }
            ],
            "id": 7811,
            "name": "EventDefinition",
            "src": "824:60:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 7925,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 7823,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7812,
                        "name": "ElementaryTypeName",
                        "src": "903:6:7"
                      }
                    ],
                    "id": 7813,
                    "name": "VariableDeclaration",
                    "src": "903:18:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "scope": 7823,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7814,
                        "name": "ElementaryTypeName",
                        "src": "923:6:7"
                      }
                    ],
                    "id": 7815,
                    "name": "VariableDeclaration",
                    "src": "923:20:7"
                  }
                ],
                "id": 7816,
                "name": "ParameterList",
                "src": "902:42:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7821,
                "name": "ParameterList",
                "src": "984:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1456,
                      "type": "type(contract CustomERC721Token)",
                      "value": "CustomERC721Token"
                    },
                    "id": 7817,
                    "name": "Identifier",
                    "src": "952:17:7"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7813,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 7818,
                    "name": "Identifier",
                    "src": "970:4:7"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7815,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 7819,
                    "name": "Identifier",
                    "src": "976:6:7"
                  }
                ],
                "id": 7820,
                "name": "ModifierInvocation",
                "src": "952:31:7"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 7822,
                "name": "Block",
                "src": "984:2:7"
              }
            ],
            "id": 7823,
            "name": "FunctionDefinition",
            "src": "890:96:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_addSolution",
              "scope": 7925,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
                      "scope": 7865,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7824,
                        "name": "ElementaryTypeName",
                        "src": "1097:7:7"
                      }
                    ],
                    "id": 7825,
                    "name": "VariableDeclaration",
                    "src": "1097:13:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "solutionAddress",
                      "scope": 7865,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7826,
                        "name": "ElementaryTypeName",
                        "src": "1112:7:7"
                      }
                    ],
                    "id": 7827,
                    "name": "VariableDeclaration",
                    "src": "1112:23:7"
                  }
                ],
                "id": 7828,
                "name": "ParameterList",
                "src": "1096:40:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7829,
                "name": "ParameterList",
                "src": "1146:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7831
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solution",
                          "scope": 7864,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7798,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7830,
                            "name": "UserDefinedTypeName",
                            "src": "1156:8:7"
                          }
                        ],
                        "id": 7831,
                        "name": "VariableDeclaration",
                        "src": "1156:24:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "index",
                            "solutionAddress"
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7798,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7832,
                            "name": "Identifier",
                            "src": "1183:8:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7825,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 7833,
                            "name": "Identifier",
                            "src": "1200:5:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7827,
                              "type": "address",
                              "value": "solutionAddress"
                            },
                            "id": 7834,
                            "name": "Identifier",
                            "src": "1268:15:7"
                          }
                        ],
                        "id": 7835,
                        "name": "FunctionCall",
                        "src": "1183:102:7"
                      }
                    ],
                    "id": 7836,
                    "name": "VariableDeclarationStatement",
                    "src": "1156:129:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7798_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7801,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7837,
                                "name": "Identifier",
                                "src": "1296:9:7"
                              }
                            ],
                            "id": 7839,
                            "name": "MemberAccess",
                            "src": "1296:14:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7831,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "solution"
                            },
                            "id": 7840,
                            "name": "Identifier",
                            "src": "1311:8:7"
                          }
                        ],
                        "id": 7841,
                        "name": "FunctionCall",
                        "src": "1296:24:7"
                      }
                    ],
                    "id": 7842,
                    "name": "ExpressionStatement",
                    "src": "1296:24:7"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7844
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7864,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7843,
                            "name": "ElementaryTypeName",
                            "src": "1331:7:7"
                          }
                        ],
                        "id": 7844,
                        "name": "VariableDeclaration",
                        "src": "1331:11:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8856,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7845,
                            "name": "Identifier",
                            "src": "1345:9:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8849,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7846,
                                    "name": "Identifier",
                                    "src": "1355:3:7"
                                  }
                                ],
                                "id": 7847,
                                "name": "MemberAccess",
                                "src": "1355:16:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7825,
                                  "type": "uint256",
                                  "value": "index"
                                },
                                "id": 7848,
                                "name": "Identifier",
                                "src": "1372:5:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7827,
                                  "type": "address",
                                  "value": "solutionAddress"
                                },
                                "id": 7849,
                                "name": "Identifier",
                                "src": "1379:15:7"
                              }
                            ],
                            "id": 7850,
                            "name": "FunctionCall",
                            "src": "1355:40:7"
                          }
                        ],
                        "id": 7851,
                        "name": "FunctionCall",
                        "src": "1345:51:7"
                      }
                    ],
                    "id": 7852,
                    "name": "VariableDeclarationStatement",
                    "src": "1331:65:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7805,
                                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "uniqueSolutions"
                                },
                                "id": 7853,
                                "name": "Identifier",
                                "src": "1406:15:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7844,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 7854,
                                "name": "Identifier",
                                "src": "1422:3:7"
                              }
                            ],
                            "id": 7855,
                            "name": "IndexAccess",
                            "src": "1406:20:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7831,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "solution"
                            },
                            "id": 7856,
                            "name": "Identifier",
                            "src": "1429:8:7"
                          }
                        ],
                        "id": 7857,
                        "name": "Assignment",
                        "src": "1406:31:7"
                      }
                    ],
                    "id": 7858,
                    "name": "ExpressionStatement",
                    "src": "1406:31:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7811,
                              "type": "function (uint256,address)",
                              "value": "SolutionAdded"
                            },
                            "id": 7859,
                            "name": "Identifier",
                            "src": "1453:13:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7825,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 7860,
                            "name": "Identifier",
                            "src": "1467:5:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7827,
                              "type": "address",
                              "value": "solutionAddress"
                            },
                            "id": 7861,
                            "name": "Identifier",
                            "src": "1474:15:7"
                          }
                        ],
                        "id": 7862,
                        "name": "FunctionCall",
                        "src": "1453:37:7"
                      }
                    ],
                    "id": 7863,
                    "name": "EmitStatement",
                    "src": "1448:42:7"
                  }
                ],
                "id": 7864,
                "name": "Block",
                "src": "1146:351:7"
              }
            ],
            "id": 7865,
            "name": "FunctionDefinition",
            "src": "1075:422:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mintNFT",
              "scope": 7925,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7924,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7866,
                        "name": "ElementaryTypeName",
                        "src": "1730:7:7"
                      }
                    ],
                    "id": 7867,
                    "name": "VariableDeclaration",
                    "src": "1730:10:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7924,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7868,
                        "name": "ElementaryTypeName",
                        "src": "1763:7:7"
                      }
                    ],
                    "id": 7869,
                    "name": "VariableDeclaration",
                    "src": "1763:15:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7924,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Verifier.Proof",
                          "referencedDeclaration": 8521,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7870,
                        "name": "UserDefinedTypeName",
                        "src": "1800:14:7"
                      }
                    ],
                    "id": 7871,
                    "name": "VariableDeclaration",
                    "src": "1800:27:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7924,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7872,
                            "name": "ElementaryTypeName",
                            "src": "1850:4:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7873,
                            "name": "Literal",
                            "src": "1855:1:7"
                          }
                        ],
                        "id": 7874,
                        "name": "ArrayTypeName",
                        "src": "1850:7:7"
                      }
                    ],
                    "id": 7875,
                    "name": "VariableDeclaration",
                    "src": "1850:20:7"
                  }
                ],
                "id": 7876,
                "name": "ParameterList",
                "src": "1729:142:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7879,
                "name": "ParameterList",
                "src": "1931:0:7"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 360,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 7877,
                    "name": "Identifier",
                    "src": "1921:9:7"
                  }
                ],
                "id": 7878,
                "name": "ModifierInvocation",
                "src": "1921:9:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_59fda354a161da9bd8f41f9eb224a899ce67e96791830e1d77290e7ae7b62920",
                                  "typeString": "literal_string \"Proof is invalid\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8865,
                                8866
                              ],
                              "referencedDeclaration": 8866,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7880,
                            "name": "Identifier",
                            "src": "1941:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$8521_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "verifyTx",
                                  "referencedDeclaration": 8846,
                                  "type": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7793,
                                      "type": "contract Verifier",
                                      "value": "verifier"
                                    },
                                    "id": 7881,
                                    "name": "Identifier",
                                    "src": "1949:8:7"
                                  }
                                ],
                                "id": 7882,
                                "name": "MemberAccess",
                                "src": "1949:17:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7871,
                                  "type": "struct Verifier.Proof memory",
                                  "value": "proof"
                                },
                                "id": 7883,
                                "name": "Identifier",
                                "src": "1967:5:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7875,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7884,
                                "name": "Identifier",
                                "src": "1974:5:7"
                              }
                            ],
                            "id": 7885,
                            "name": "FunctionCall",
                            "src": "1949:31:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50726f6f6620697320696e76616c6964",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Proof is invalid\"",
                              "value": "Proof is invalid"
                            },
                            "id": 7886,
                            "name": "Literal",
                            "src": "1982:18:7"
                          }
                        ],
                        "id": 7887,
                        "name": "FunctionCall",
                        "src": "1941:60:7"
                      }
                    ],
                    "id": 7888,
                    "name": "ExpressionStatement",
                    "src": "1941:60:7"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7890
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7923,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7889,
                            "name": "ElementaryTypeName",
                            "src": "2012:7:7"
                          }
                        ],
                        "id": 7890,
                        "name": "VariableDeclaration",
                        "src": "2012:11:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8856,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7891,
                            "name": "Identifier",
                            "src": "2026:9:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8849,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7892,
                                    "name": "Identifier",
                                    "src": "2036:3:7"
                                  }
                                ],
                                "id": 7893,
                                "name": "MemberAccess",
                                "src": "2036:16:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7869,
                                  "type": "uint256",
                                  "value": "tokenId"
                                },
                                "id": 7894,
                                "name": "Identifier",
                                "src": "2053:7:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7867,
                                  "type": "address",
                                  "value": "to"
                                },
                                "id": 7895,
                                "name": "Identifier",
                                "src": "2062:2:7"
                              }
                            ],
                            "id": 7896,
                            "name": "FunctionCall",
                            "src": "2036:29:7"
                          }
                        ],
                        "id": 7897,
                        "name": "FunctionCall",
                        "src": "2026:40:7"
                      }
                    ],
                    "id": 7898,
                    "name": "VariableDeclarationStatement",
                    "src": "2012:54:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                                  "typeString": "literal_string \"Solution already exists\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8865,
                                8866
                              ],
                              "referencedDeclaration": 8866,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7899,
                            "name": "Identifier",
                            "src": "2076:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "solutionAddress",
                                  "referencedDeclaration": 7797,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7805,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "uniqueSolutions"
                                        },
                                        "id": 7900,
                                        "name": "Identifier",
                                        "src": "2084:15:7"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7890,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 7901,
                                        "name": "Identifier",
                                        "src": "2100:3:7"
                                      }
                                    ],
                                    "id": 7902,
                                    "name": "IndexAccess",
                                    "src": "2084:20:7"
                                  }
                                ],
                                "id": 7903,
                                "name": "MemberAccess",
                                "src": "2084:36:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7904,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2124:7:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7905,
                                    "name": "Literal",
                                    "src": "2132:1:7"
                                  }
                                ],
                                "id": 7906,
                                "name": "FunctionCall",
                                "src": "2124:10:7"
                              }
                            ],
                            "id": 7907,
                            "name": "BinaryOperation",
                            "src": "2084:50:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20616c726561647920657869737473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution already exists\"",
                              "value": "Solution already exists"
                            },
                            "id": 7908,
                            "name": "Literal",
                            "src": "2136:25:7"
                          }
                        ],
                        "id": 7909,
                        "name": "FunctionCall",
                        "src": "2076:86:7"
                      }
                    ],
                    "id": 7910,
                    "name": "ExpressionStatement",
                    "src": "2076:86:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1455,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8917,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7911,
                                "name": "Identifier",
                                "src": "2173:5:7"
                              }
                            ],
                            "id": 7913,
                            "name": "MemberAccess",
                            "src": "2173:10:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7867,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7914,
                            "name": "Identifier",
                            "src": "2184:2:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7869,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7915,
                            "name": "Identifier",
                            "src": "2188:7:7"
                          }
                        ],
                        "id": 7916,
                        "name": "FunctionCall",
                        "src": "2173:23:7"
                      }
                    ],
                    "id": 7917,
                    "name": "ExpressionStatement",
                    "src": "2173:23:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7865,
                              "type": "function (uint256,address)",
                              "value": "_addSolution"
                            },
                            "id": 7918,
                            "name": "Identifier",
                            "src": "2206:12:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7869,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7919,
                            "name": "Identifier",
                            "src": "2219:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7867,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7920,
                            "name": "Identifier",
                            "src": "2228:2:7"
                          }
                        ],
                        "id": 7921,
                        "name": "FunctionCall",
                        "src": "2206:25:7"
                      }
                    ],
                    "id": 7922,
                    "name": "ExpressionStatement",
                    "src": "2206:25:7"
                  }
                ],
                "id": 7923,
                "name": "Block",
                "src": "1931:307:7"
              }
            ],
            "id": 7924,
            "name": "FunctionDefinition",
            "src": "1713:525:7"
          }
        ],
        "id": 7925,
        "name": "ContractDefinition",
        "src": "325:1915:7"
      }
    ],
    "id": 7926,
    "name": "SourceUnit",
    "src": "0:2240:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "solutionAddress",
              "type": "address"
            }
          ],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xddd10b314c26c20098919e5d9ab61e552e4b296997e9f663d4f278d1cf8edb06": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "TransferedOwnership",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x80C893589cb92A7d8BD97085b30C6b3120eC01ad",
      "transactionHash": "0x682738af6c7e49b7138c64dd564ba600487815c30e8d6b17ca36d4bcd2fe8c79"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "solutionAddress",
              "type": "address"
            }
          ],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xddd10b314c26c20098919e5d9ab61e552e4b296997e9f663d4f278d1cf8edb06": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "TransferedOwnership",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xD881897a1c7A263213438d3fb82c0aa0863dc3Ea",
      "transactionHash": "0x4d835a395d0a1a4d7ce04b21a5b2dbe4c0c3a60e8afefe83b86f5aa228519d3d"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-04-09T15:07:34.495Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}